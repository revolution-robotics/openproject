upstream @APP-NAME@ {
    zone upstreams 64K;
    server unix:///run/puma/@APP-NAME@/sockets/puma.sock max_fails=1 fail_timeout=2s;

    # Set to multipe of `server' directives (above).
    keepalive 2;
}

server {
    server_name @SERVER-FQDN@;
    client_body_timeout 10s;
    client_header_timeout 10s;

    ## Logging
    access_log  /var/log/nginx/@APP-NAME@.access.log proxy_combined;
    error_log   /var/log/nginx/@APP-NAME@.error.log  info;

    # Root of path to static files.
    root /home/puma/@APP-NAME@/public;

    location ~ ^/assets/ {
        gzip_static on;

        if (-f $request_filename) {
            access_log off;
            # expires 30d;
            add_header Cache-Control "public, max-age=2592000, must-revalidate";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            break;
        }
    }

    location / {
        # HSTS response header if not already set in Rails config/environments/production.rb.
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        proxy_set_header Host $host;
        proxy_pass http://@APP-NAME@;
        proxy_next_upstream error timeout http_500;

        # HTTP version > 1.0 required for directive `keepalive' (above),
        # and Connection "" removes `close' value from Connection header.
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # X-Forwarded headers have been superceded by Forwarded header.
        # See https://www.nginx.com/resources/wiki/start/topics/examples/forwarded/
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Proto https;
    }

    # listen [::]:443 ssl http2;
    # listen @SERVER-FQDN@:443 ssl http2;
    # ssl_certificate /etc/letsencrypt/live/@SERVER-FQDN@/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/@SERVER-FQDN@/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/dhparams.pem;
}

server {
    if ($host = @SERVER-FQDN@) {
        return 301 https://$host$request_uri;
    }

    server_name @SERVER-FQDN@;
    listen [::]:80;
    listen @SERVER-FQDN@:80;
    return 404;
}
